----------------------------
Author: Aaron Tobias
School: Rensselaer Polytechnic Institute
Project: HTML 5 Chat Client

  CORE REQUIREMENTS
 --------------------------------------------
 
 1. Broadcast messages
 2. Private messages
 3. Users (Logged In) cron script
 4. Multi-color users, color matching
 5. Ugly version of private client and broadcast client
 6. Basic error handling (Server handles most of it)
 
  BONUS FEATURES COMPLETED
 --------------------------------------------
 
 1. Images Recieve can be clicked on in new popup window
 2. Inline image support - Defaults to echo server for testing.
 3. Chunking - only supported with echo server since actual server does not support it.
 4. Slick Chat Client Design and Features
 
  007 THEMED CHAT CLIENT FEATURES
 ----------------------------------------------
 
 1. HTML 5 web socket status lights upper left corner
 2. Login Form
 3. Professor Goldschmidt Bond Animation - A Must See!!!!
 4. On hover flash buttons
 5. sliding tabs, roll up screens
 6. HTML 5 Audio
 7. HTML 5 Filereader
 8. Security Lock and Unlock (drop down menu after logged in)
 9. Tabbed system for Private Messages
 10. Message Notification System ==> users flash orange on incoming messages.
 11. CSS 3 Gradients
 
 
   COMING SOON
 ----------------------------------------------
 1. HTML 5 Storage
 2. SLICK ERROR HANDLING, USER NOTIFICATIONS
 3. OPTIMIZED JavaScript (Continuous Process)
 4. Better commenting, stick to a system
 5. More audio integration (sound effects)
 6. Weird pull levers and other interactive elements
 7. Object Oriented Design... ehhh ... who knows
 
 
  LAST MINUTE NOTES
 ----------------------------------------------
 	
	/*DEBUG */
	var DEBUG_MODE = 0; --> see more output
	var SKIP_BOND_ANIMATION = 1; -> skip bond animation
	
	/* Test Chunking with Echo Server */
	var ECHO_SERVER_CHUNK_TEST = 0;
	var ECHO_SERVER_START_TEST = 0;
	
	/* Test Inline Images with Echo Server (inline images cannot be chunked!) */
	var INLINE_IMAGE_TEST = 0;
	
	
  HAVE FUN AND GOOD LUCK - TOBIAS
 ----------------------------------------------

Protocol:

	When a client receives a message from the server,
    it will appear as a FROM message, but with either
    BROADCAST or PRIVATE prepended (indicating the type
    of message it is), as in:

      BROADCAST FROM ladygaga\n
      9\n
      You suck!

      PRIVATE FROM selenagomez\n
      15\n
      leave me alone!
	
	-----------------------------------------------------------
    CHUNKED MESSAGE EXAMPLE [ chunk if greater than 99 bytes ]
	-----------------------------------------------------------
	
	SEND selenagomez\n
	  C108\n
	  step off my turf!\n
	  step off my turf!\n
	  step off my turf!\n
	  step off my turf!\n
	  step off my turf!\n
	  step off my turf!\n
	  C8\n
	  got it?!
	  C0
	  
	  LOGIN:  I AM <userID>
	  
	  GET ONLINE CHATTERS:  USERS

Version: 1.0
----------------------------